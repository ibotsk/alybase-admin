
var prefix = "/AlybaseAdmin";
//var prefix = "/admin";

//hack
var listofspecies = [];
function initLos(los) {
	listofspecies = los;
}

$(document).ready(function () {
	
	//init bootstrap tooltip
	$('[data-toggle="tooltip"]').tooltip();

    /** literature block **/
	//literature autocomplete generated by AutoCompleteHelper
	
    //literature-modal specific
    disablePublication('1'); //default
    $("#LiteratureDisplayType").change(function (e) {
        disablePublication($(this).val());
    });
    $("#submit-literature").click(function () {
        var $aj = sendAjax($("#LiteratureInsertForm").attr('action') + '.json', $("#LiteratureInsertForm").serialize());
        $aj.done(function (html) {
            $("#literature-paper").val(html.label);
            $("#literature-id").val(html.value);
            $("#modal-literature").modal('hide');
            clear($("#LiteratureInsertForm"));
            return false;
        }).fail(function (m) {
            console.log('FAILED: Ajax , Submit literature: ' + m);
        });
    });
    
    //---------------//

    /** List of species and identification block **/
    //autocomplete generated by AutoCompleteHelper
    
    $("#submit-identification").click(function () {
        var $aj = sendAjax($("#ListOfSpeciesInsertForm").attr('action') + '.json', $("#ListOfSpeciesInsertForm").serialize());
        $aj.done(function (html) {
            $("#identification-name").val(html.label);
            $("#identification-name-id").val(html.value);
            $("#modal-identification").modal('hide');
            clear($("#ListOfSpeciesInsertForm"));
            return false;
        }).fail(function (m) {
            console.log('FAILED: Ajax , Submit identification: ' + m);
        });
    });
    $("#name-as-published-copy").click(function () {
        $("#identification-name-as-published").val($("#identification-name").val());
    });
    $("#identification-hybrid").hide();
    $("#identification-is-hybrid").change(function () {
        if ($(this).is(":checked")) {
            $("#identification-hybrid").show("fast");
        } else {
            $("#identification-hybrid").hide("fast");
        }
    });
    $("#identification-name").change(function () {
        if ($(this).val().length === 0) {
            $("#identification-name-id").val("");
        }
    });
    //---------------//

    /** Persons block **/

    $("button.person-btn").click(function () {
    	//initialize hidden input in persons form so we know whick of many persons button has been pressed
        var id = $(this).attr("id");
        $("#modal-person-ref-btn").val(id.substring(0, id.length - 4));
    });
    
    //autocompletes for persons generated by AutoCompleteHelper

    $("#submit-person").click(function () {
        var $aj = sendAjax($("#PersonInsertForm").attr('action') + '.json', $("#PersonInsertForm").serialize());
        $aj.done(function (html) {
            $("#" + html.ref + "-name").val(html.label);
            $("#" + html.ref + "-id").val(html.value);
            $("#modal-person").modal('hide');
            return false;
        }).fail(function (m) {
            console.log('FAILED: Ajax , Submit person: ' + m);
        });
    });
    //---------------//

    /** World 4 block **/
    //world4 autocomplete replaced by select
    /*
    $("#world4-name").autocomplete({
        source: prefix + "/worlds/search.json",
        minLength: 3,
        select: function (event, ui) {
            $("#world4-id").val(ui.item.value);
            $("#world4-name").val(ui.item.label);
            return false;
        }
    }).autocomplete("instance")._renderMenu = function (ul, items) {
        var that = this;
        $.each(items, function (index, item) {
            that._renderItemData(ul, item);
        });
        $(ul).find("li:odd").addClass("odd");
    };
    $("#world4").autocomplete("instance")._renderItem = function (ul, item) {
        return $("<li>")
                .append('<a>' + item.label + ', <small>' + item.desc + '</small></a>')
                .appendTo(ul);
    };*/
    //---------------//


    $('#editform').submit(function (e) {
        e.preventDefault();
        var id = $(this).find('#id').val();
        if (id !== '') {
            window.location.href = prefix + '/data/edit/' + id;
        }
    });
    
    
    //row is added to the table with new values, marked as not saved
    $("#revision-add").on('click', function (e) {
    	var i = $("#revision-table").find("tr").length; //current row number
    	
    	//var $options = $("#revision-add-select-template > option").clone();
    	
    	var $select = $('<select name="data[History][' + i + '][id_standardised_name]" class="form-control" placeholder="Revised name from checklist">')
    	$.each(listofspecies, function(key, value) {
    		$select.append('<option value="' + key + '">' + value + '</option>');
    	});
    	
    	var hiddenValue = $("#revision-add-hidden-template").val();
    	
    	var $row = $("<tr>").append('<td class="col-xs-1"><span class="label label-warning">New</span></td>')
    	.append('<td class="col-xs-3"><input name="data[History][' + i + '][revised_name]" class="form-control" placeholder="Revised name" type="text"></td>')
    	.append($('<td class="col-xs-7">').append($select))
    	.append('<td class="col-xs-1"><button type="button" class="btn btn-warning btn-delete-rev-weak"><span class="glyphicon glyphicon-remove"></span></button></td>')
    	.append('<input type="hidden" name="data[History][' + i + '][id_data]" value="' + hiddenValue + '">');
    	
    	$row.prependTo($("#revision-table"));
    });
    
    $("a.btn-delete").click(function(e) {
    	return confirm("You are about to delete this record. Are you sure?");
    });
    
    //class btn-delete-rev-strong is for revisions already in db, it deletes them permanently from the db
    $(".btn-delete-strong").click(function(e) {
    	return confirm("You are about to remove this item. This operation will be performed immediately and is permament. Do you want to continue?");
    });
    
    //class btn-delete-rev-weak is for new revisions not yet in db, it only removes the row from this table
    $("table").on('click', ".btn-delete-rev-weak", function(e) {
    	$(this).parents("tr").remove();
    });
    
});
